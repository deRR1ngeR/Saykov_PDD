// <auto-generated />
using System;
using Kursach.Models.Base;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kursach.Migrations
{
    [DbContext(typeof(SAYKOV_PDDContext))]
    [Migration("20220423173036_MIGRATIONDB")]
    partial class MIGRATIONDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kursach.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("Admin_id");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOfEntry")
                        .HasColumnType("date")
                        .HasColumnName("Date_of_entry");

                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Login_id");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Patronim")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("Phone_Number");

                    b.Property<string>("Surname")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("AdminId");

                    b.HasIndex("LoginId");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Exam_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"), 1L, 1);

                    b.Property<string>("ExamResult")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Exam_result");

                    b.HasKey("ExamId");

                    b.HasIndex("ExamResult");

                    b.ToTable("Exam", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.ExamResult", b =>
                {
                    b.Property<string>("ExamResults")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Exam_Results");

                    b.HasKey("ExamResults");

                    b.ToTable("Exam_results", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.Fine", b =>
                {
                    b.Property<int>("FineId")
                        .HasColumnType("int");

                    b.Property<string>("FineCost")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fine_Cost");

                    b.Property<string>("FineText")
                        .HasMaxLength(350)
                        .HasColumnType("nchar(350)")
                        .HasColumnName("Fine_Text")
                        .IsFixedLength();

                    b.Property<int>("FineThemId")
                        .HasColumnType("int");

                    b.HasKey("FineId");

                    b.HasIndex("FineThemId");

                    b.ToTable("Fine", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.FineThem", b =>
                {
                    b.Property<int>("FineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Fine_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FineId"), 1L, 1);

                    b.Property<string>("FineText")
                        .HasMaxLength(350)
                        .HasColumnType("nchar(350)")
                        .HasColumnName("Fine_Text")
                        .IsFixedLength();

                    b.HasKey("FineId")
                        .HasName("PK_PDD_Fine");

                    b.ToTable("FineThem", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Login_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"), 1L, 1);

                    b.Property<string>("LoginName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Login_name");

                    b.Property<string>("Passwords")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("LoginId");

                    b.ToTable("Login", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.PddInfo", b =>
                {
                    b.Property<int>("PddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PDD_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PddId"), 1L, 1);

                    b.Property<string>("PddImg")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PDD_img");

                    b.Property<string>("PddText")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("PDD_Text");

                    b.HasKey("PddId");

                    b.ToTable("PDD_Info", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("Question_id");

                    b.Property<string>("Answer1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Answer_1");

                    b.Property<string>("Answer2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Answer_2");

                    b.Property<string>("Answer3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Answer_3");

                    b.Property<string>("QuestionImg")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Question_img");

                    b.Property<string>("QuestionText")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("Question_text");

                    b.Property<string>("RightAnswer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Right_answer");

                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticket_id");

                    b.HasKey("QuestionId");

                    b.HasIndex("TicketId");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Ticket_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<string>("TicketResult")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Ticket_result");

                    b.HasKey("TicketId");

                    b.HasIndex("TicketResult");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.TicketExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ExamId")
                        .HasColumnType("int")
                        .HasColumnName("Exam_id");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("Ticket_id");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("TicketId");

                    b.ToTable("Ticket_Exam", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.TicketResult", b =>
                {
                    b.Property<string>("TicketResult1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Ticket_result");

                    b.HasKey("TicketResult1");

                    b.ToTable("Ticket_results", (string)null);
                });

            modelBuilder.Entity("Kursach.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.Property<string>("Exam")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Login_id");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Patronim")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Results")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Surname")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("UserId");

                    b.HasIndex("Exam");

                    b.HasIndex("LoginId");

                    b.HasIndex("Results");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kursach.Admin", b =>
                {
                    b.HasOne("Kursach.Models.Login", "Login")
                        .WithMany("Admins")
                        .HasForeignKey("LoginId")
                        .IsRequired()
                        .HasConstraintName("FK__Admin__Login_id__38996AB5");

                    b.Navigation("Login");
                });

            modelBuilder.Entity("Kursach.Models.Exam", b =>
                {
                    b.HasOne("Kursach.Models.ExamResult", "ExamResultNavigation")
                        .WithMany("Exams")
                        .HasForeignKey("ExamResult")
                        .HasConstraintName("FK_Exam_Exam_results");

                    b.Navigation("ExamResultNavigation");
                });

            modelBuilder.Entity("Kursach.Models.Fine", b =>
                {
                    b.HasOne("Kursach.Models.FineThem", "FineThem")
                        .WithMany("Fines")
                        .HasForeignKey("FineThemId")
                        .IsRequired()
                        .HasConstraintName("FK_Fine_FineThem");

                    b.Navigation("FineThem");
                });

            modelBuilder.Entity("Kursach.Models.Question", b =>
                {
                    b.HasOne("Kursach.Models.Ticket", "Ticket")
                        .WithMany("Questions")
                        .HasForeignKey("TicketId")
                        .IsRequired()
                        .HasConstraintName("FK_Question_Ticket");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Kursach.Models.Ticket", b =>
                {
                    b.HasOne("Kursach.Models.TicketResult", "TicketResultNavigation")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketResult")
                        .IsRequired()
                        .HasConstraintName("FK_Ticket_Ticket_results");

                    b.Navigation("TicketResultNavigation");
                });

            modelBuilder.Entity("Kursach.Models.TicketExam", b =>
                {
                    b.HasOne("Kursach.Models.Exam", "Exam")
                        .WithMany("TicketExams")
                        .HasForeignKey("ExamId")
                        .HasConstraintName("FK__Ticket_Ex__Exam___44FF419A");

                    b.HasOne("Kursach.Models.Ticket", "Ticket")
                        .WithMany("TicketExams")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("FK_Ticket_Exam_Ticket");

                    b.Navigation("Exam");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Kursach.Models.User", b =>
                {
                    b.HasOne("Kursach.Models.ExamResult", "ExamNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Exam")
                        .HasConstraintName("FK_Users_Exam_results");

                    b.HasOne("Kursach.Models.Login", "Login")
                        .WithMany("Users")
                        .HasForeignKey("LoginId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__Login_id__52593CB8");

                    b.HasOne("Kursach.Models.TicketResult", "ResultsNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Results")
                        .HasConstraintName("FK_Users_Ticket_results");

                    b.Navigation("ExamNavigation");

                    b.Navigation("Login");

                    b.Navigation("ResultsNavigation");
                });

            modelBuilder.Entity("Kursach.Models.Exam", b =>
                {
                    b.Navigation("TicketExams");
                });

            modelBuilder.Entity("Kursach.Models.ExamResult", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Kursach.Models.FineThem", b =>
                {
                    b.Navigation("Fines");
                });

            modelBuilder.Entity("Kursach.Models.Login", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Kursach.Models.Ticket", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("TicketExams");
                });

            modelBuilder.Entity("Kursach.Models.TicketResult", b =>
                {
                    b.Navigation("Tickets");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
